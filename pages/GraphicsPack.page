<apex:page title="Graphics Pack" tabStyle="Graphics_Pack_Overview__tab">

<apex:composition template="GraphicsPackTemplate">
<apex:define name="body">

<apex:pageBlock title="About">

<apex:pageBlockSection title="Overview" columns="1">
<p>
'Graphics Pack' contains hundreds of images that can be used in salesforce applications for tabs, image formulas, and visualforce pages (subject to Attribution). 
</p>
<p>
Clicking on the different images/links at the top of this page will allow you to browser the installed images in the 'Graphics Pack' package.  
</p>
</apex:pageBlockSection>

<apex:pageBlockSection title="What is in the package" columns="1">
<p>
Graphics pack contains images in sizes of 16x16 and 32x32 pixels.
</p>
<ul>
<li>The 32x32 pixel images can be used in tabs (for example the elephant on this tab)</li>
<li>The 16x16 pixel images can be used in image formula fields (for example the light bulbs, deck chairs, etc shown in the screen shot further down this page)</li>
</ul>
<p>
All images are stored twice within this package 
</p>
<ul>
<li>once in a zipped static resource file called 'Graphics Pack' for use in Visualforce pages</li>
<li>and once in the documents tab under two folders</li>
	<ul>
	<li>'Graphics Pack for Formulas' for 16x16 pixel images</li>
	<li>'Graphics Pack for Tabs' for 32x32 pixel images</li>
	</ul>
</ul>
<p>
The images are displayed in several Visualforce pages which can be accessed from the 'Graphics Pack' tab on the 'Graphics Pack' application.
</p>

</apex:pageBlockSection>

<apex:pageBlockSection title="Sandboxes" columns="1">

<p>
If development is being done in a sandbox ensure that the sandbox was created from a production system
that already has "Graphics Pack" installed as newly created image formulas will reference the document id for
the graphic ( as a sandbox will contain the same graphic document id as the production system in this scenario ). When the image
formula is promoted from sandbox to production it will reference the graphic with the correct document id. 
</p>

<p>
If you install "Graphics Pack" into the sandbox first ( before promoting to the production system ) and then create a formula field that uses a graphic 
document id then promote the image formula and graphic to the production system the graphics document id will be different and the image formula
will not work correctly.
</p>

</apex:pageBlockSection>

<apex:pageBlockSection title="Attribution" columns="1">

<p>
In order to use the graphics in this package most require an attribution to the author.
The pages within this package that display the images contain an attribution, if these pages
are removed then the attribution must be created elsewhere in order to continue using the images.
</p>

</apex:pageBlockSection>

</apex:pageBlock>

<apex:pageBlock title="Tab example">
<apex:pageBlockSection title="Setup" columns="1">
<p>
In order to use one of the images in the package for a tab
</p>
<ol>
<li>Browse the larger images (32x32 pixels) in this package using the images/link at the top of this page to identify the required image</li>
<li>Note the name of the image (as needed later)</li>
<li>When creating a new tab click on the magnifying glass for 'Tab Style'</li>
<li>Click on 'Create your own style' button</li>
<li>Select a Color</li>
<li>Click on 'Insert an Image'</li>
<li>Click on 'Search in Documents' link</li>
<li>Search on previously noted image name. As there are a lot of images within Graphics Pack it is easier to search for image name rather than browse</li>
<li>Ensure the chosen image is from the 'Graphics Pack for Tabs' folder</li>
<li>The image may not initially appear next to the 'Insert an Image' button but click 'OK' anyway</li>
<li>Complete the rest of the tab wizard</li>
<li>Navigate to the new tab to verify the image is displayed correctly</li>
</ol>
</apex:pageBlockSection>
</apex:pageBlock>

<apex:pageBlock title="Image Formula examples">

<apex:pageBlockSection title="Setup" columns="1">
<p>
In order to use images in the package for a image formulas
</p>
<ol>
<li>Browse the smaller images (16x16 pixels) in this package using the images/link at the top of this page to identify the required images</li>
<li>Note the name of the images (as needed later)</li>
<li>Click on 'Documents' tab</li>
<li>Select 'Graphics Pack for Formulas' folder</li>
<li>Click on name of images noted from earlier step</li>
<li>Note the Document Id of the image by looking at the last part of the URL, it will be in the form of 015xxxxxxxxxxxx</li>
</ol>
<p>
The Document Id is used within the image formulas
</p>
</apex:pageBlockSection>

<apex:pageBlockSection title="Record showing Image Formulas" columns="1">

<p>
Below is an example of how images formulas can be used with the images within the 'Graphics Pack' package.
</p>

<p>
<img src="{!URLFOR($Resource.GraphicsPackExample)}" alt="Graphics Pack Formula Examples" />
</p>

<p>
The following sections provides the details on the image formulas. Please search the on line documentation on 'Examples of Advanced Formula Fields' to see how to create image formulas.
</p>

</apex:pageBlockSection>

<apex:pageBlockSection title="Simple 'Out of x' examples" columns="1">

<p style="font-weight:bold;">
Out of 5 Deck Chairs
</p>

<pre style="border-style:solid;padding:10px;">
IF ( VALUE(TEXT(XXX)) > 0, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16),"")
+
IF ( VALUE(TEXT(XXX)) > 1, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16),"")
+
IF ( VALUE(TEXT(XXX)) > 2, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16),"")
+
IF ( VALUE(TEXT(XXX)) > 3, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16),"")
+
IF ( VALUE(TEXT(XXX)) > 4, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16),"")
</pre>
<ul>
<li>Where XXX is a picklist with values 1,2,3,4,5</li>
<li>Where YYY is the Document Id of the image (the Document id does not need to be the same for example see Out of 3 Currency)</li>
</ul>

</apex:pageBlockSection>

<apex:pageBlockSection title="On/Off 'Out of x' examples" columns="1">

<p style="font-weight:bold;">
Out of 3 Lightbulbs
</p>

<pre style="border-style:solid;padding:10px;">
IF ( VALUE(TEXT(XXX)) > 0, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16), IMAGE("/servlet/servlet.FileDownload?file=ZZZ", "-", 16, 16))
+
IF ( VALUE(TEXT(XXX)) > 1, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16), IMAGE("/servlet/servlet.FileDownload?file=ZZZ", "-", 16, 16))
+
IF ( VALUE(TEXT(XXX)) > 2, IMAGE("/servlet/servlet.FileDownload?file=YYY", "*", 16, 16), IMAGE("/servlet/servlet.FileDownload?file=ZZZ", "-", 16, 16))
</pre>
<ul>
<li>Where XXX is a picklist with values 1,2,3</li>
<li>Where YYY is the Document Id of the "on" image</li>
<li>Where ZZZ is the Document Id of the "off" image</li>
</ul>

</apex:pageBlockSection>

<apex:pageBlockSection title="'Positions', 'Up or Down', or 'Red Amber Green' examples" columns="1">

<p style="font-weight:bold;">
Red Amber Green
</p>

<pre style="border-style:solid;padding:10px;">
CASE( WWW ,
"Red", IMAGE("/servlet/servlet.FileDownload?file=XXX","Red",16,16),
"Amber", IMAGE("/servlet/servlet.FileDownload?file=YYY","Amber",16,16),
"Green", IMAGE("/servlet/servlet.FileDownload?file=ZZZ","Green",16,16),
"")</pre>
<ul>
<li>Where WWW is a picklist with values "Red","Amber","Green"</li>
<li>Where XXX is the Document Id of the "Red" image</li>
<li>Where YYY is the Document Id of the "Amber" image</li>
<li>Where ZZZ is the Document Id of the "Green" image</li>
</ul>

</apex:pageBlockSection>

</apex:pageBlock>

</apex:define>
</apex:composition>

</apex:page>